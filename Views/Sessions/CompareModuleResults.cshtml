@model AttendanceQR.Web.ViewModels.ModuleCompareVm
@{
    ViewData["Title"] = "Module Comparison Results";
}

<div class="card border-0 shadow-sm mb-4">
    <div class="card-body p-4">
        <div class="d-flex align-items-center justify-content-between flex-wrap gap-2">
            <div>
                <h2 class="h4 mb-1">Absentees for <span class="text-primary">@Model.ModuleCode</span></h2>
                <div class="small text-muted">
                    @if (Model.FromDate.HasValue || Model.ToDate.HasValue)
                    {
                        <span>
                            Date range:
                            <strong>@(Model.FromDate?.ToString("yyyy-MM-dd") ?? "—")</strong>
                            &nbsp;to&nbsp;
                            <strong>@(Model.ToDate?.ToString("yyyy-MM-dd") ?? "—")</strong>
                        </span>
                    }
                    else
                    {
                        <span>All dates</span>
                    }
                </div>
            </div>
            <div class="d-flex flex-wrap gap-2">
                <a class="btn btn-outline-secondary btn-sm" asp-controller="Sessions" asp-action="CompareModule">
                    <i class="bi bi-arrow-left-short me-1"></i> New Compare
                </a>
                <a class="btn btn-outline-dark btn-sm" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-house-door me-1"></i> Dashboard
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Summary badges -->
<div class="row g-3 mb-3">
    <div class="col-12 col-md-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div>
                    <div class="text-uppercase small text-muted">Roster</div>
                    <div class="fs-5 fw-semibold">@Model.RosterCount</div>
                </div>
                <span class="badge bg-secondary-subtle text-secondary border border-secondary-subtle">
                    <i class="bi bi-people-fill me-1"></i> Students
                </span>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div>
                    <div class="text-uppercase small text-muted">Present (any session)</div>
                    <div class="fs-5 fw-semibold">@Model.PresentCount</div>
                </div>
                <span class="badge bg-success-subtle text-success border border-success-subtle">
                    <i class="bi bi-check2-circle me-1"></i> Present
                </span>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div>
                    <div class="text-uppercase small text-muted">Absent</div>
                    <div class="fs-5 fw-semibold">@Model.Absentees.Count</div>
                </div>
                <span class="badge bg-danger-subtle text-danger border border-danger-subtle">
                    <i class="bi bi-x-circle me-1"></i> Absent
                </span>
            </div>
        </div>
    </div>
</div>

<!-- Export -->
<div class="card border-0 shadow-sm mb-3">
    <div class="card-body p-4">
        <h5 class="card-title mb-2">Export absentees</h5>
        <p class="text-muted small mb-3">Re-upload the same roster file to export only the absentees for this module and date range.</p>

        <form asp-action="ExportModuleAbsentees" method="post" enctype="multipart/form-data" class="d-flex flex-wrap gap-2 align-items-end" id="exportForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="moduleCode" value="@Model.ModuleCode" />
            <input type="hidden" name="fromDate" value="@(Model.FromDate?.ToString("yyyy-MM-dd"))" />
            <input type="hidden" name="toDate" value="@(Model.ToDate?.ToString("yyyy-MM-dd"))" />

            <div class="flex-grow-1" style="min-width: 260px;">
                <label class="form-label">Roster file (.xlsx or .csv)</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-upload"></i></span>
                    <input type="file" name="rosterFile" class="form-control" accept=".xlsx,.csv" required />
                </div>
            </div>

            <button class="btn btn-success" type="submit" id="exportBtn">
                <span class="spinner-border spinner-border-sm me-2 d-none" id="exportSpinner" role="status" aria-hidden="true"></span>
                <i class="bi bi-download me-1"></i> Download Absent (Excel)
            </button>
        </form>
    </div>
</div>

<!-- Results table / empty state -->
@if (!Model.Absentees.Any())
{
    <div class="alert alert-success d-flex align-items-center" role="alert">
        <i class="bi bi-emoji-smile me-2 fs-5"></i>
        <div>No absentees found. Great job! 🎉</div>
    </div>
}
else
{
    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-sm table-striped align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 180px;">Student Number</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Programme</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var a in Model.Absentees)
                        {
                            <tr>
                                <td class="font-monospace">@a.StudentNumber</td>
                                <td>@a.FirstName</td>
                                <td>@a.LastName</td>
                                <td>@a.Programme</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Prevent double submit & show spinner on export
        (function () {
          const form = document.getElementById("exportForm");
          const btn = document.getElementById("exportBtn");
          const spin = document.getElementById("exportSpinner");
          form?.addEventListener("submit", () => {
            btn?.setAttribute("disabled", "disabled");
            spin?.classList.remove("d-none");
          });
        })();
    </script>
}
