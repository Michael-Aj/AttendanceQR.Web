// <auto-generated />
using System;
using AttendanceQR.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AttendanceQR.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250802104532_UpdateModel")]
    partial class UpdateModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.AttendanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CapturedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NonceUsed")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceIp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAgent")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassSessionId");

                    b.HasIndex("StudentNumber");

                    b.ToTable("AttendanceRecords");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.ClassSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ClassDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nonce")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NonceExpiresAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("QrUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("VenueCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModuleCode");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.HasIndex("VenueCode");

                    b.ToTable("ClassSessions");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.EmailSignInToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UsedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StaffEmail", "TokenHash")
                        .IsUnique();

                    b.ToTable("EmailSignInTokens");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.Lecturer", b =>
                {
                    b.Property<string>("StaffEmail")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("StaffEmail");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.Module", b =>
                {
                    b.Property<string>("ModuleCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ModuleCode");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.Student", b =>
                {
                    b.Property<string>("StudentNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Programme")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentNumber");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.Venue", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.AttendanceRecord", b =>
                {
                    b.HasOne("AttendanceQR.Web.Domain.Entities.ClassSession", "ClassSession")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("ClassSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceQR.Web.Domain.Entities.Student", "Student")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("StudentNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassSession");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.ClassSession", b =>
                {
                    b.HasOne("AttendanceQR.Web.Domain.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AttendanceQR.Web.Domain.Entities.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.ClassSession", b =>
                {
                    b.Navigation("AttendanceRecords");
                });

            modelBuilder.Entity("AttendanceQR.Web.Domain.Entities.Student", b =>
                {
                    b.Navigation("AttendanceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
